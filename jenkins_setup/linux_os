steps for install java
1) goto below website and accept the licence for the agreement
https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
2)Download the below rpm in windows 
Linux x64	168.05 MB  	jdk-8u201-linux-x64.rpm
if u download the above rpm through wget it is not praperlly download and installed
3)Through scp we can transfer the file on /tmp folder
4)commands on linux(https://docs.oracle.com/javase/8/docs/technotes/guides/install/linux_jdk.html#BJFJJEFG)
which java
java -version
rpm -e java
rpm -ivh jdk-8u201-linux-x64.rpm
cd /usr/java/jdk1.8.0_201-amd64
pwd
cd /root
vi .bash_profile
***************
JAVA_HOME=/usr/java/jdk1.8.0_201-amd64
PATH=$JAVA_HOME/bin:$PATH
***************
which java
java -version
echo $JAVA_HOME
source .bash_profile
echo $JAVA_HOME
which java
[picture](https://github.com/rajadevops26/jenkins/blob/master/jenkins_setup/rpmjava.jpg)
*******************************************************************************************************************
                                          jenkins install steps
*******************************************************************************************************************
1)to know in which os, we are install the package 
cat /etc/os-release
2)os current state updation
yum update
3)Go to below website for adding jenkins repo to the yum repository and import key from jenkins through rpm,
then download and install jenkins on os
[jenkins](https://pkg.jenkins.io/redhat/)
wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo
yum update
rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
ls
yum update
wget https://pkg.jenkins.io/redhat-stable/jenkins-2.138.1-1.1.noarch.rpm
ls
rpm -ivh jenkins-2.138.1-1.1.noarch.rpm
(or)
yum install jenkins
service jenkins status
service jenkins stop
service jenkins start

**************************************************************************************************************************
                                      MAVEN INSTALLATION STEPS
*************************************************************************************************************************
1)Goto apache maven website and copy the links
https://maven.apache.org/download.cgi
2) commands to do
cd /opt
wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz
ls
tar -xvzf apache-maven-3.6.0-bin.tar.gz
ls
mvn -v ----not shown need path 
export PATH=/opt/apache-maven-3.6.0/bin:$PATH
mvn -v
(or)
cd
cat .bash_profile
-------------------
# .bash_profile
# Get the aliases and functions
if [ -f ~/.bashrc ]; then
        . ~/.bashrc
fi
# User specific environment and startup programs
PATH=$PATH:$HOME/bin
export PATH
JAVA_HOME=/usr/java/jdk1.8.0_211-amd64
PATH=$JAVA_HOME/bin:$PATH
ANSIBLE_HOME=/etc/ansible
PATH=$ANSIBLE_HOME:$PATH
MAVEN_HOME=/opt/maven
PATH=$MAVEN_HOME/bin:$PATH
------------------------------
source .bash_profile
(or)
yum install maven
mvn -v
*******************************************************************************************************************************
                                  TOMCAT INSTALLATION STEPS
********************************************************************************************************************************
1} Goto apacetomcat website and copy the link
https://tomcat.apache.org/download-80.cgi
2) select Binary Distributions------>> core ----->>on wbsite to copy the link
3)then commands to do
cd /opt
wget http://mirrors.estointernet.in/apache/tomcat/tomcat-8/v8.5.38/bin/apache-tomcat-8.5.38.tar.gz
tar -xvzf apache-tomcat-8.5.38.tar.gz
ln -s /opt/apache-tomcat-8.5.38 /opt/tomcat8
ln -s /opt/tomcat8/bin/startup.sh /usr/local/bin/up
ln -s /opt/tomcat8/bin/shutdown.sh /usr/local/bin/down

        { or }
alias start='/opt/tomcat8/bin/startup.sh'
alias stop='/opt/tomcat8/bin/shutdown.sh'

************************************** provoiding user credentials and roles for monitoring team*****************

STEP1:-------------->>>>> GIVING ROLES AND AUTHONTICATIONS TO USERS
cd /opt/tomcat8/conf
vi tomcat-users.xml
****************************************************************************************
<?xml version="1.0" encoding="UTF-8"?>
<tomcat-users xmlns="http://tomcat.apache.org/xml"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
              version="1.0">
  <role rolename="manager-gui"/>
    <role rolename="manager-script"/>
    <role rolename="manager-jmx"/>
    <role rolename="manager-status"/>
    <role rolename="admin"/>
    <role rolename="admin-gui"/>
    <user username="rajendra" password="yogi" roles="admin,manager-gui,manager-script,manager-jmx,manager-status,admin-gui"/>
    <user username="admin" password="admin" roles="admin,manager-gui,manager-script,manager-jmx,manager-status,admin-gui"/>

</tomcat-users>
*****************************************************************************************
STEP2:------------------------>>>> DISABLING LOCAL AUTHONTICATION OF TOMCAT SERVER ACCESS GIVES ON CURRENT IP for host-manager


cd /opt/tomcat8/webapps/host-manager/META-INF

vi context.xml

**--------------------------------------------------------------------------------------**
<?xml version="1.0" encoding="UTF-8"?>
<Context antiResourceLocking="false" privileged="true" >
<!--  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />-->
  <Manager sessionAttributeValueClassNameFilter="java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap"/>
</Context>
*********------------------------------------------------------------------------------*********


STEP3:-------------------------->>>>>>>>>DISEBLE LOCAL MANAGER AND ACCESS ONLY HOSTED ONE IP


cd /opt/tomcat8/webapps/manager/META-INF

vi context.xml
**---------------------------------------------------------------------------------------------------**
<?xml version="1.0" encoding="UTF-8"?>
<Context antiResourceLocking="false" privileged="true" >
<!--  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />-->
  <Manager sessionAttributeValueClassNameFilter="java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap"/>
</Context>
***************--------------------------------------------------------------------------------*****************

STEP4:---------------------------->>>>>>> TO CHANGE DEFAULT PORT TO YOUR OWN PORT


cd /opt/tomcat8/conf
vi server.xml

(((((((((((((((((((((((((((((((((((((((((((((i changed 8080 connector port to 4091 only not touch anything ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((

<?xml version="1.0" encoding="UTF-8"?>
<Server port="8005" shutdown="SHUTDOWN">
  <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
  <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />
<GlobalNamingResources>
  <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
</GlobalNamingResources>
<Service name="Catalina">
    <Connector port="4091" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />
    <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />
    <Engine name="Catalina" defaultHost="localhost">
    <Realm className="org.apache.catalina.realm.LockOutRealm">
    <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
               resourceName="UserDatabase"/>
    </Realm>
    <Host name="localhost"  appBase="webapps"
            unpackWARs="true" autoDeploy="true">
    <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
               prefix="localhost_access_log" suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" />

      </Host>
    </Engine>
  </Service>
</Server>




((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((

                                              STEP5: JUST WATCH WHAT INSIDE THE TOMACT XML FILES
{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{

cd /opt/tomcat8/conf
vi context.xml

<?xml version="1.0" encoding="UTF-8"?>
<Context>
    <WatchedResource>WEB-INF/web.xml</WatchedResource>
    <WatchedResource>${catalina.base}/conf/web.xml</WatchedResource>
</Context>
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
cd /opt/tomcat8/conf
vi jaspic-providers.xml

<?xml version="1.0" encoding="UTF-8"?>
<jaspic-providers xmlns="http://tomcat.apache.org/xml"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://tomcat.apache.org/xml jaspic-providers.xsd"
                  version="1.0">
</jaspic-providers>

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
cd /opt/tomcat8/webapps/host-manager
vi manager.xml

<?xml version="1.0" encoding="UTF-8"?>
<Context docBase="${catalina.home}/webapps/manager"
         privileged="true" antiResourceLocking="false" >

</Context>
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


